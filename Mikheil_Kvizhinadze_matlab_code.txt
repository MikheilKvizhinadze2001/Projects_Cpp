
/*
class Student{
private:
    float GPA;

public:
    const std::string name;
    const int age;
    float english_grade;
    float math_grade;

    Student(std::string name,int age) :name(std::move(name)),age(age)  {}

};*/


class User {
private:
    std::string password;
    int failed_attempts;
    int failed_attempts_username;
    std::chrono::system_clock::time_point lockout_time;

public:
    std::string username;
    User(std::string username, std::string password) : username(username), password(password),
    failed_attempts(0),failed_attempts_username(0){}

    std::string getUsername() {
        return username;
    }


    int checkUsername(const std::string& enteredUsername){
        if (failed_attempts_username==3){
            std::cout<<"Access denied, suspicious behavior"<<std::endl;
            return -1;
        }
        if (enteredUsername!=username)
            failed_attempts++;

    }
    bool checkPassword(const std::string& enteredPassword) {
        if (failed_attempts == 3) {

            auto now = std::chrono::system_clock::now();
            auto duration = std::chrono::duration_cast<std::chrono::minutes>(now - lockout_time);

            if (duration.count() < 1) {
                std::cout << "Access blocked for 1 minutes due to 3 failed attempts." << std::endl;
                return false;
            }

            else {
                failed_attempts = 0; // Reset failed attempts after 5 minutes
            }
        }

        if (enteredPassword == password) {
            return true;
        } else {
            failed_attempts++;
            if (failed_attempts >= 3) {
                lockout_time = std::chrono::system_clock::now();
            }
            return false;
        }
    }
};



class Principal : public User {


public:
    Principal(std::string username, std::string password) : User(username, password){}




    void view_database() {
    }
};



class Math_teacher : public User{
public:
    Math_teacher(std::string username,std::string password): User(username,password){}


};



class English_teacher : public User{
public:
    English_teacher(std::string username, std::string password): User(username,password){}

};
